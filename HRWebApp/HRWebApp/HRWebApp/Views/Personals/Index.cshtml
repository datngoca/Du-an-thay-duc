@model IEnumerable<HRWebApp.Models.Personal>

@{
    ViewBag.Title = "Index";
}

<div class="module">
    <div class="module-head">
        <h3>Personals - @Html.ActionLink("Create New", "Create")</h3>
    </div>
    @if (TempData["SuccessMessage"] != null)
    {
        <div id="successMessage" class="alert alert-success" role="alert">
            @TempData["SuccessMessage"]
        </div>

        <script>
            // Sử dụng JavaScript để ẩn thông báo sau 2 giây
            setTimeout(function () {
                var successMessage = document.getElementById('successMessage');
                if (successMessage) {
                    successMessage.style.display = 'none';
                }
            }, 2000);
        </script>
    }
    <div class="module-body table">

        <table cellpadding="0" cellspacing="0" border="0" class="datatable-1 table table-bordered table-striped	 display" width="100%">
            <thead>
                <tr>
                    <th>
                        Full Name
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.City)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Phone_Number)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Gender)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Social_Security_Number)
                    </th>
                    <th></th>
                </tr>

            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="odd gradeX">
                        <td>
                            @Html.DisplayFor(modelItem => item.First_Name)
                            @Html.DisplayFor(modelItem => item.Last_Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.City)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Phone_Number)
                        </td>
                        <td class="center">
                            @{
                                string gender = "";
                                if ((bool)item.Gender)
                                {
                                    gender = "Male";
                                }
                                else
                                {
                                    gender = "Female";
                                }
                            }
                            @Html.DisplayFor(modelItem => gender)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Social_Security_Number)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.Employee_ID }) |
                            @*@Html.ActionLink("Details", "Details", new { id = item.Employee_ID }) |*@
                            @Html.ActionLink("Delete", "Delete", new { id = item.Employee_ID })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div><!--/.module-->
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.7.5/socket.io.js"></script>
<script>
    // Tạo kết nối với máy chủ Socket.io
    const socket = io('http://localhost:4000'); // Địa chỉ máy chủ Socket.io của bạn
    const socket2 = io('http://localhost:5000');
    // Lắng nghe sự kiện từ máy chủ Socket.io
    socket.on('employeeUpdated', function () {
        // Reload trang khi nhận được thông báo từ máy chủ Socket.io
        location.reload();
    });
    socket.on('employeeDeleted', function () {
        // Reload trang khi nhận được thông báo từ máy chủ Socket.io
        location.reload();
    });
    socket.on('employeeCreated', function () {
        // Reload trang khi nhận được thông báo từ máy chủ Socket.io
        location.reload();
    });
    socket2.on('PayrolltoHR', function () {
        // Reload trang khi nhận được thông báo từ máy chủ Socket.io
        location.reload();
    });
</script>
